<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PikaChu</title>
  
  <subtitle>Just me want to say</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.jzy.pub/"/>
  <updated>2021-03-24T14:21:49.365Z</updated>
  <id>https://blog.jzy.pub/</id>
  
  <author>
    <name>PikaChu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SMB 挂载命令</title>
    <link href="https://blog.jzy.pub/2020/08/25/SMB%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.jzy.pub/2020/08/25/SMB%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/</id>
    <published>2020-08-25T09:14:24.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户密码"><a href="#用户密码" class="headerlink" title="用户密码"></a>用户密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt; //&lt;from-address&gt;/&lt;folder&gt; /&lt;mount-local-folder&gt;</span><br></pre></td></tr></table></figure><h2 id="指定smb版本"><a href="#指定smb版本" class="headerlink" title="指定smb版本"></a>指定smb版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt;,vers=1.0,iocharset=utf8 //&lt;from-address&gt;/&lt;folder&gt; /&lt;mount-local-folder&gt;</span></span><br></pre></td></tr></table></figure><h2 id="指定编码"><a href="#指定编码" class="headerlink" title="指定编码"></a>指定编码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt;,codepage=cp936 //&lt;from-address&gt;/&lt;folder&gt; /&lt;mount-local-folder&gt;</span><br></pre></td></tr></table></figure><h2 id="指定端口"><a href="#指定端口" class="headerlink" title="指定端口"></a>指定端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mount -t cifs -o username=&lt;username&gt;,password=&lt;password&gt;,port=&lt;smb-port&gt; //&lt;from-address&gt;/&lt;folder&gt; /&lt;mount-local-folder&gt;</span><br></pre></td></tr></table></figure><h2 id="可读写-777"><a href="#可读写-777" class="headerlink" title="可读写 777"></a>可读写 777</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mount -t cifs -o <span class="string">"rw,dir_mode=0777,file_mode=0777,username=&lt;username&gt;,password=&lt;password&gt;"</span> //&lt;from-address&gt;/&lt;folder&gt; /&lt;mount-local-folder&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用户密码&quot;&gt;&lt;a href=&quot;#用户密码&quot; class=&quot;headerlink&quot; title=&quot;用户密码&quot;&gt;&lt;/a&gt;用户密码&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker 一键脚本</title>
    <link href="https://blog.jzy.pub/2020/08/25/Docker%20%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.jzy.pub/2020/08/25/Docker%20%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/</id>
    <published>2020-08-25T03:07:24.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh </span><br><span class="line">$ sudo sh get-docker.sh</span><br><span class="line"><span class="comment"># $ sudo sh get-docker.sh --mirror Aliyun </span></span><br><span class="line"><span class="comment"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span></span><br></pre></td></tr></table></figure><h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker-compose"></a>Docker-compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">$ sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="Openwrt-install-Docker-compose"><a href="#Openwrt-install-Docker-compose" class="headerlink" title="Openwrt install Docker-compose"></a>Openwrt install Docker-compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install --ignore-installed PyYAML</span><br><span class="line">$ pip3 install docker-compose==1.23.2</span><br></pre></td></tr></table></figure><hr><h2 id="v2ray"><a href="#v2ray" class="headerlink" title="v2ray"></a>v2ray</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 8888:8888 v2ray/official v2ray -config=/etc/v2ray/config.json</span><br><span class="line">$ docker run -d --name v2ray --net=host -v /mnt/user/appdata/v2ray:/etc/v2ray v2ray/official  v2ray -config=/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h2 id="webdav"><a href="#webdav" class="headerlink" title="webdav"></a>webdav</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always -v /root/webdav:/var/lib/dav  -e AUTH_TYPE=Basic -e USERNAME=&lt;username&gt; -e PASSWORD=&lt;password&gt; --publish 6666:80 -d bytemark/webdav</span><br></pre></td></tr></table></figure><h2 id="Qbittorrent"><a href="#Qbittorrent" class="headerlink" title="Qbittorrent"></a>Qbittorrent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker create \</span><br><span class="line">  --name&#x3D;qbittorrent \</span><br><span class="line">  -e PUID&#x3D;1000 \</span><br><span class="line">  -e PGID&#x3D;1000 \</span><br><span class="line">  -e TZ&#x3D;Asia&#x2F;Shanghai \</span><br><span class="line">  -e UMASK_SET&#x3D;022 \</span><br><span class="line">  -e WEBUI_PORT&#x3D;8080 \</span><br><span class="line">  -p 6881:6881 \</span><br><span class="line">  -p 6881:6881&#x2F;udp \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v &#x2F;root&#x2F;qb&#x2F;config:&#x2F;config \</span><br><span class="line">  -v &#x2F;root&#x2F;downloads:&#x2F;downloads \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  linuxserver&#x2F;qbittorrent</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;2.1&quot;</span><br><span class="line">services:</span><br><span class="line">  qbittorrent:</span><br><span class="line">    image: linuxserver&#x2F;qbittorrent</span><br><span class="line">    container_name: qbittorrent</span><br><span class="line">    environment:</span><br><span class="line">      - PUID&#x3D;1000</span><br><span class="line">      - PGID&#x3D;1000</span><br><span class="line">      - TZ&#x3D;Asia&#x2F;Shanghai</span><br><span class="line">      - UMASK_SET&#x3D;022</span><br><span class="line">      - WEBUI_PORT&#x3D;8080</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;share&#x2F;config&#x2F;qb:&#x2F;config</span><br><span class="line">      - &#x2F;share&#x2F;Download:&#x2F;downloads</span><br><span class="line">      - &#x2F;share&#x2F;XXX:&#x2F;media&#x2F;XXX</span><br><span class="line">      - &#x2F;share&#x2F;ZZZ:&#x2F;media&#x2F;ZZZ</span><br><span class="line">    network_mode: &quot;host&quot;</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    &lt;!--ports:--&gt;</span><br><span class="line">    &lt;!--  - 32581:32581--&gt;</span><br><span class="line">    &lt;!--  - 32581:32581&#x2F;udp--&gt;</span><br><span class="line">    &lt;!--  - 8080:8080--&gt;</span><br></pre></td></tr></table></figure><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3.1&#39;</span><br><span class="line">services:</span><br><span class="line">  db:</span><br><span class="line">    image: mysql</span><br><span class="line">    command: --default-authentication-plugin&#x3D;mysql_native_password</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: &lt;password&gt;</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">      </span><br><span class="line">  adminer:</span><br><span class="line">    image: adminer</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br></pre></td></tr></table></figure><h2 id="ali-ddns"><a href="#ali-ddns" class="headerlink" title="ali-ddns"></a>ali-ddns</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always --net=host \</span><br><span class="line">-e <span class="string">"AKID=&lt;AKID&gt;"</span> \</span><br><span class="line">-e <span class="string">"AKSCT=&lt;AKSCT&gt;"</span> \</span><br><span class="line">-e <span class="string">"DOMAIN=&lt;DOMAIN&gt;"</span> \</span><br><span class="line">-e <span class="string">"REDO=300"</span> \</span><br><span class="line">-e <span class="string">"TTL=600"</span> \</span><br><span class="line">-e <span class="string">"TIMEZONE=8.0"</span> \</span><br><span class="line">-e <span class="string">"TYPE=AAAA"</span> \</span><br><span class="line">sanjusss/aliyun-ddns</span><br></pre></td></tr></table></figure><h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="jellyfin"></a>jellyfin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  jellyfin:</span><br><span class="line">    image: jellyfin&#x2F;jellyfin</span><br><span class="line">    user: 1000:1000</span><br><span class="line">    network_mode: &quot;host&quot;</span><br><span class="line">    restart: &quot;unless-stopped&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;share&#x2F;config&#x2F;jellyfin&#x2F;:&#x2F;config</span><br><span class="line">      - &#x2F;share&#x2F;Download:&#x2F;media</span><br><span class="line">      - &#x2F;share&#x2F;config&#x2F;jellyfin&#x2F;cache:&#x2F;cache</span><br><span class="line">      - &#x2F;share&#x2F;ZZZ:&#x2F;media&#x2F;ZZZ</span><br></pre></td></tr></table></figure><h2 id="freshrss"><a href="#freshrss" class="headerlink" title="freshrss"></a>freshrss</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;2.1&quot;</span><br><span class="line">services:</span><br><span class="line">  freshrss:</span><br><span class="line">    image: linuxserver&#x2F;freshrss</span><br><span class="line">    container_name: freshrss</span><br><span class="line">    environment:</span><br><span class="line">      - PUID&#x3D;1000</span><br><span class="line">      - PGID&#x3D;1000</span><br><span class="line">      - TZ&#x3D;Asia&#x2F;Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;root&#x2F;freshrss&#x2F;config:&#x2F;config</span><br><span class="line">    ports:</span><br><span class="line">      - 8086:80</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><h2 id="bitwarden"><a href="#bitwarden" class="headerlink" title="bitwarden"></a>bitwarden</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name bitwarden -v /root/bw-data/:/data/ -p 4331:80 bitwardenrs/server:latest</span><br></pre></td></tr></table></figure><h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -v ~/frps:/conf --name frp-server-dashboard --net=host cloverzrg/frps-docker</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Docker&quot;&gt;&lt;a href=&quot;#Docker&quot; class=&quot;headerlink&quot; title=&quot;Docker&quot;&gt;&lt;/a&gt;Docker&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于Telegram</title>
    <link href="https://blog.jzy.pub/2020/03/14/%E5%85%B3%E4%BA%8ETelegram/"/>
    <id>https://blog.jzy.pub/2020/03/14/%E5%85%B3%E4%BA%8ETelegram/</id>
    <published>2020-03-14T12:35:01.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>本周沉迷邵老师的课，停更阳阳周报。确实没有玩啥新奇的东西，值得一提的是我正在努力的将我的社交工具从微信改为电报。但如果你不是IOS用户，用电报做基本的社交依旧是一大难题。</p><a id="more"></a><p>几天前翻关于电报的资料，翻到了一篇文章，<a href="https://matters.news/@Luterngun/%E6%88%96%E8%AE%B8-telegram-%E6%98%AF%E6%9C%80%E4%B8%8D%E5%9D%8F%E7%9A%84%E9%80%89%E6%8B%A9-zdpuAqSCzLTLgisSHVv6QtyFAysE8j1rCrMj1HEc8hWTUiyAd" target="_blank" rel="noopener">或许，Telegram 是最不坏的选择</a> 文章主体内容是：电报旨在打造一款大众流行的即时通信应用，因此它在匿名性的设计上是不足的。尽管如此，电报依旧因为它丰富的功能，出色的用户体验以及用户信息安全方面的优势而成为数字时代即时通讯最不坏的选择。</p><p>幸运的是IOS国区并没有封锁Telegram，我们可以通过App store下载，但连接Telegram始终是个难题。</p><p>电报有开发自有的 MTProto 网络传输协议，但这在GFW的面前就是杂碎，难有生存空间。但如果不想每次打开电报都要去打开Shadowrocket，便利的使用Telegram必不可少MTProto，但它的缺陷也很明显，容易被墙。</p><p>既然MTProto容易被墙，我们可以通过其他不容易被检测到的方式过墙，然后在国内的服务器上连接中转。</p><p>恰好 V某Ray 是支持的，通过国外辣鸡线路搭建wss，国内小鸡docker运行 v某ray 中转出一个MTProto方便使用，当然如果是个人使用完全可以中转为 socks5 Telegram可以直接在应用内使用，但分享socks5给朋友，容易被用来当做翻墙工具，分分钟流量走爆。朋友也是有朋友的嘛。</p><p>但MTP就不会有那样的疑虑，我使用了一个5m的超小带宽服务器，支持我绝大部分的朋友使用，仅仅用来收发消息看看图完全没有问题。</p><p>如果因为服务器被墙或是其他，你需要更换节点，你不用再通知每一个朋友，只需要修改中转服务器上的配置就解决了问题。</p><p>解决了Telegram的连接问题，还有一个问题需要解决，Telegram消息提醒，这个其实挺好解决的，换一台apple设备。</p><p>14/03/2020 20:35</p><p>End </p><p>PS.网上教程挺多的。有点基础的朋友可以看看 <a href="https://gist.github.com/zhuziyi1989/869402aa60182ca4f55eaa865e399ff9" target="_blank" rel="noopener">V2Ray 中转服务器配置折腾记（附全套配置）</a><br>MTP现在也支持tls了，你可以尝试使用alexbres大佬的docker-compose配置方案 <a href="https://github.com/alexbers/mtprotoproxy" target="_blank" rel="noopener">alexbers/mtprotoproxy</a> </p><p>也欢迎点击加入<a href="https://t.me/auosun99" target="_blank" rel="noopener">电报群</a> 进行交流，友情提醒本人小粉红。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本周沉迷邵老师的课，停更阳阳周报。确实没有玩啥新奇的东西，值得一提的是我正在努力的将我的社交工具从微信改为电报。但如果你不是IOS用户，用电报做基本的社交依旧是一大难题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活随笔" scheme="https://blog.jzy.pub/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>阳阳周报 2020-10</title>
    <link href="https://blog.jzy.pub/2020/03/04/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5%202020-10/"/>
    <id>https://blog.jzy.pub/2020/03/04/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5%202020-10/</id>
    <published>2020-03-04T13:35:01.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>本周基本无事发生。<br>要开始弄学期项目了。一年都没有认真弄，实在是难受。</p><a id="more"></a><h2 id="Ubuntu-tensorflow-gpu"><a href="#Ubuntu-tensorflow-gpu" class="headerlink" title="Ubuntu tensorflow-gpu"></a>Ubuntu tensorflow-gpu</h2><p>ubuntu属实好用，因为学期项目的需求安装 Ubuntu 18.04.04 </p><p>安装 Anaconda 之后安装 tensorflow-gpu 属实难。</p><p>ubuntu软件源更换为清华源，anaconda更换为中科大源。</p><h2 id="N1"><a href="#N1" class="headerlink" title="N1"></a>N1</h2><p>之前N1安装了小钢炮系统，它自带的qBittorrent是4.1.3版本的 对于现在的实在是太老了。 </p><p>重装整个N1系统，安装 Docker 并在docker中使用最新的Qb系统 </p><p>具体更换docker版qb 可参考：<a href="http://nanodm.net:8092/archives/43/" target="_blank" rel="noopener">http://nanodm.net:8092/archives/43/</a></p><p>并在docker中安装bypy 并向百度网盘备份所有专辑歌曲。从此妈妈再也不会担心我的数据丢失了。</p><p>bypy安装和使用参考如下：<br>docker地址：<a href="https://hub.docker.com/r/lstcml/bypy" target="_blank" rel="noopener">https://hub.docker.com/r/lstcml/bypy</a><br>Github地址：<a href="https://github.com/houtianze/bypy/" target="_blank" rel="noopener">https://github.com/houtianze/bypy/</a><br>使用方法：<a href="https://www.jianshu.com/p/c9467daf701f" target="_blank" rel="noopener">https://www.jianshu.com/p/c9467daf701f</a></p><h2 id="Openwrt"><a href="#Openwrt" class="headerlink" title="Openwrt"></a>Openwrt</h2><p>本周更新路由器固件为OpenWrt R20.2.15 / LuCI Master (git-20.051.42827-3e80fef)</p><p>未能使用上最新的XXR 有点可惜。</p><p>第一次使用网易云解锁实在是舒服啊。终于可以在网易云听发如雪了。</p><h2 id="影"><a href="#影" class="headerlink" title="影"></a>影</h2><ul><li><p>性教育 🇬🇧 电视剧</p></li><li><p>紧急呼救911 🇺🇸 电视剧</p></li></ul><h2 id="歌"><a href="#歌" class="headerlink" title="歌"></a>歌</h2><ul><li><p>柔软 - 房东的猫</p></li><li><p>魔女の宅急便 ヴォーカルアルバム - 久石让</p></li><li><p>嗯 - 李荣浩</p></li><li><p>Baby Blue - Mary Lou Lord</p></li><li><p>Red Pill Blues - Maroon5</p></li></ul><p>04/03/2020 21:34</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本周基本无事发生。&lt;br&gt;要开始弄学期项目了。一年都没有认真弄，实在是难受。&lt;/p&gt;
    
    </summary>
    
    
      <category term="阳阳周报" scheme="https://blog.jzy.pub/categories/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>阳阳周报 2020-9</title>
    <link href="https://blog.jzy.pub/2020/02/25/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5%202020-9/"/>
    <id>https://blog.jzy.pub/2020/02/25/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5%202020-9/</id>
    <published>2020-02-25T14:42:00.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>更博客的需求太小，于是整出个这么个玩意儿算是整理自己一周所做的事。每周三写一次。</p><a id="more"></a><h2 id="新域名-jzy-pub"><a href="#新域名-jzy-pub" class="headerlink" title="新域名: jzy.pub"></a>新域名: jzy.pub</h2><p>上周新域名jzy.pub总算完成了备案，正式更换所有的网站域名。</p><ol><li>zhengyang.kim -&gt; <a href="http://blog.jzy.pub">blog.jzy.pub</a> 博客</li><li>rss.zhengyang.kim -&gt; <a href="https://rss.jzy.pub/" target="_blank" rel="noopener">rss.jzy.pub</a> rss阅读站</li><li>rsshub.zhengyang.kim -&gt; 关站 </li><li>voice.1zy.pw -&gt; <code>ts.jzy.pub</code> teamspeak语音站</li><li><a href="http://rss.jzy.pub/" target="_blank" rel="noopener">tsbot.jzy.pub</a> 新建teamspeak机器人站点</li></ol><h2 id="更换笔记软件为Joplin"><a href="#更换笔记软件为Joplin" class="headerlink" title="更换笔记软件为Joplin"></a>更换笔记软件为Joplin</h2><p>印象笔记VIP过期已经很久了，一直不愿意去充值。毕竟印象笔记跟自己的需求还是有比较大的差距的。同步缓慢，复杂的页面，并没有太多用处的网页截图。一直想要一个只要有markdown和快速同步的笔记工具就好了。</p><p>于是在网络上进行了 漫长的搜索，发现了Joplin.</p><p>说真的，joplin不好看，但很简单。功能不多，但一个不缺。完美的网页截取，不可谓不实用。</p><p>最重要的是支持Webdav同步。同步坚果云，一切浑然天成。</p><p>IOS,LINUX,WINDOWS,ANDROID,MACOS全平台支持。开源，社区环境好，插件多样化。用户界面定制。虽然只支持Markdown，但markdown不就够了吗？</p><p>虽然编辑器是丑了点，但是支持外部编辑器。吹爆！</p><p>Github：<a href="https://github.com/laurent22/joplin" target="_blank" rel="noopener">https://github.com/laurent22/joplin</a></p><p>官网：<a href="https://joplinapp.org/" target="_blank" rel="noopener">https://joplinapp.org/</a></p><h2 id="黑苹果-macOS-Catalina-10-15-3"><a href="#黑苹果-macOS-Catalina-10-15-3" class="headerlink" title="黑苹果 macOS Catalina 10.15.3"></a>黑苹果 macOS Catalina 10.15.3</h2><p>玩黑苹果也半年有余了，一直没舍得购买一张5G黑苹果网卡。</p><p>如今正式进入Catalina版本，在阅读大佬efi之后购买 <code>Broadcom BCM94352z 802.11ac Wireless Network Adapter</code> 270元 听说几年前买就70块,哭晕在厕所</p><p>正式配置如下：联想小新锐7000</p><table><thead><tr><th>部件</th><th>信息</th></tr></thead><tbody><tr><td>CPU</td><td>Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz</td></tr><tr><td>内存</td><td>4g DDR4 2400Mhz x2</td></tr><tr><td>存储</td><td>SL700-M.2-2280-128G<br>Samsung SSD 860 EVO 500GB</td></tr><tr><td>显卡</td><td>Intel HD Graphics 630<br>NVIDIA GeForce GTX 1050</td></tr><tr><td>声卡</td><td>Realtek ALC235</td></tr><tr><td>有线网卡</td><td>Realtek RTL8111 PCI-E Gigabit Ethernet Adapter</td></tr><tr><td>无线网卡</td><td>Broadcom BCM94352z 802.11ac Wireless Network Adapter</td></tr></tbody></table><p>EFI文件地址：<a href="https://github.com/Erf172/Lenovo_XiaoXin_Rui7000_Hackintosh" target="_blank" rel="noopener">https://github.com/Erf172/Lenovo_XiaoXin_Rui7000_Hackintosh</a></p><p>现在支持ipad巡航，隔空投送。</p><p>如今也算是拥有半个苹果生态的人了。整体体验就一个字：舒服。</p><h2 id="Teamspeak服务器"><a href="#Teamspeak服务器" class="headerlink" title="Teamspeak服务器"></a>Teamspeak服务器</h2><p>作为一个MacOS的使用者，没有一款像YY一样的软件让我和朋友进行更友好方便的交流是不太舒服的。于是在一位的朋友的推荐下重新搭建了Teamspeak服务器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Server:ts.jzy.pub</span><br><span class="line">password:1999</span><br></pre></td></tr></table></figure><p>欢迎来到 PikaChu’s 酒馆</p><p>Teamspeak和YY相比可能也就没有一个自动播放歌曲让我觉得有些缺憾了吧。</p><p>于是我发现了 TS3audioBot</p><p>Github：<a href="https://github.com/Splamy/TS3AudioBot" target="_blank" rel="noopener">https://github.com/Splamy/TS3AudioBot</a></p><p>Linux，Windows均可搭建。虽然还有不少缺点，但是足够使用了。较好的Web界面增色了不少。</p><h2 id="影"><a href="#影" class="headerlink" title="影"></a>影</h2><ul><li>想见你 台剧 <a href="https://movie.douban.com/subject/30468961/" target="_blank" rel="noopener">douban</a> <a href="https://www.imdb.com/title/tt11262762" target="_blank" rel="noopener"><i class="fab fa-imdb"></i></a></li><li>我在未来等你 国产剧 <a href="https://movie.douban.com/subject/30183817" target="_blank" rel="noopener">douban</a></li><li>unnatural 日剧 <a href="https://movie.douban.com/subject/27140017" target="_blank" rel="noopener">douban</a> <a href="https://www.imdb.com/title/tt7521882" target="_blank" rel="noopener"><i class="fab fa-imdb"></i></a></li></ul><h2 id="歌"><a href="#歌" class="headerlink" title="歌"></a>歌</h2><ul><li>1984-1989李宗盛作品集 - 李宗盛 </li><li>平凡的一天 - 毛不易 - <strong>平凡的一天</strong></li><li>生命因你而火热 - 新裤子 - <strong>没有理想的人不伤心</strong></li><li>Up All Night [The Souvenir Edition] - One Direction - <strong>One thing</strong></li><li>思念是一种病 - 张震岳 - <strong>再见</strong></li><li>愛情的盡頭 - 伍佰 &amp; CHINA BLUE - <strong>挪威的森林</strong></li></ul><p>PS. 歌列表在歌手之后放的是本人觉得这张专辑最好听的歌</p><p>25/02/2020 22:42</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;更博客的需求太小，于是整出个这么个玩意儿算是整理自己一周所做的事。每周三写一次。&lt;/p&gt;
    
    </summary>
    
    
      <category term="阳阳周报" scheme="https://blog.jzy.pub/categories/%E9%98%B3%E9%98%B3%E5%91%A8%E6%8A%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows软件手册</title>
    <link href="https://blog.jzy.pub/2020/02/21/Windows%E8%BD%AF%E4%BB%B6%E6%89%8B%E5%86%8C/"/>
    <id>https://blog.jzy.pub/2020/02/21/Windows%E8%BD%AF%E4%BB%B6%E6%89%8B%E5%86%8C/</id>
    <published>2020-02-21T15:16:00.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>用<strong>印象笔记</strong>2年了，总觉得它并不是让我很舒服，有那么些花销的功能,却并不实用，和国际版分割，在chrome应用里面下载截图插件都要调几次调回中国版。让人心累。好在发现了 <strong>Joplin</strong> 虽然界面不好看，但看起来十分的简洁，功能不多 <strong>Markdown</strong> 够用了。<strong>WebDav</strong> 秒速同步到坚果云，真是令人舒心啊。迁移过程中发现了一篇去年8月记录的 <a href="https://app.yinxiang.com/shard/s61/nl/22318257/22e57aae-0288-4ee2-b5ba-1d3f4b082baa?title=%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%202019.8.19" target="_blank" rel="noopener"><strong>Windows重装软件单</strong></a>那时候还是Windows主力的我，可是下了一番苦工。就以那篇笔记为基础。写一篇 <strong>Windows软件手册</strong> 吧</p><a id="more"></a><h3 id="家用推荐"><a href="#家用推荐" class="headerlink" title="家用推荐"></a>家用推荐</h3><ol><li>浏览器：Edge 微软edge浏览器<br> 全新配方，chrome内核，原生支持chrome插件，提供IE兼容模式并标配大量插件。就用它！<br> 详细看异次元的这篇文章就可以了 <a href="https://www.iplaysoft.com/microsoft-edge.html" target="_blank" rel="noopener">https://www.iplaysoft.com/microsoft-edge.html</a></li><li>解压软件：7z<br> 解压软件挺多的，开源的也很多，但7z就像天生就在windows巨丑无比的右键菜单上。给你一种7z是微软自带安装的感觉，简单舒服，格式多样。<br> 官网：<a href="https://www.7-zip.org/" target="_blank" rel="noopener">https://www.7-zip.org/</a></li><li>播放器：potplayer<br> 官网国内给它整没了。一样的简单实用，超多格式播放器，流媒体播放的最佳体验。变速播放，多声道音频，软硬解码，单帧播放…… 你想要的他都有。有点武林宗师集大成者的感觉。整几个好看的皮肤美滋滋。<br> 官网：<a href="https://potplayer.daum.net/" target="_blank" rel="noopener">https://potplayer.daum.net/</a></li><li>安全软件：火绒<br> 火绒这软件，杀毒不强，没有卸载软件功能。但他免费无广告舒心，重要的是他有防弹窗功能。在这个不得不用QQ的年代,也就只想要自动防弹窗了。再说，它杀毒能力也不弱。<br> 官网：<a href="https://www.huorong.cn/" target="_blank" rel="noopener">https://www.huorong.cn/</a></li><li>下载工具：FDM<br> 不多说，迅雷SM。fdm有浏览器插件支持，在免费无广告，下载速度快，可直接下载youtube1080p视频。当然win最强下载工具是IDM无可置疑。<br> 官网：<a href="https://www.freedownloadmanager.org/zh/" target="_blank" rel="noopener">https://www.freedownloadmanager.org/zh/</a></li></ol><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ol><li>输入法：QQ输入法<br> 可游戏输入，csgo唯一可输入中文的输入法。丑是丑了点，将就吧。</li><li>信息插件：trafficMonitor<br> 开源软件，状态栏显示下载速度，cpu，内存运行状态。就像天生就应该在状态栏一样。舒心简单。<br> Github：<a href="https://github.com/zhongyang219/TrafficMonitor/releases" target="_blank" rel="noopener">https://github.com/zhongyang219/TrafficMonitor/releases</a></li><li>截图插件：snipaste<br> snipaste &gt; qq截图<br> 官网：<a href="https://zh.snipaste.com/" target="_blank" rel="noopener">https://zh.snipaste.com/</a></li><li>置顶插件：deskpins</li></ol><h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><p>我用的不一定是最好的，但一定是免费、开源中比较优秀的。不推荐使用盗版付费软件。</p><p>当然还有很多软件，不仅仅局限于此，你可以点击我的<a href="https://app.yinxiang.com/shard/s61/nl/22318257/22e57aae-0288-4ee2-b5ba-1d3f4b082baa?title=%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%202019.8.19" target="_blank" rel="noopener">印象笔记<br>链接</a>查看。</p><p>FDM官网下载巨慢，Potplayer官网国内被墙，令人遗憾。</p><p>今天黑苹果网卡到位了。已经安装并成功使用隔空投送，大概要正式告别Windows了。仅以此文纪念使用windows的岁月。</p><p>有一说一：MacOS 🐮🍺</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用&lt;strong&gt;印象笔记&lt;/strong&gt;2年了，总觉得它并不是让我很舒服，有那么些花销的功能,却并不实用，和国际版分割，在chrome应用里面下载截图插件都要调几次调回中国版。让人心累。好在发现了 &lt;strong&gt;Joplin&lt;/strong&gt; 虽然界面不好看，但看起来十分的简洁，功能不多 &lt;strong&gt;Markdown&lt;/strong&gt; 够用了。&lt;strong&gt;WebDav&lt;/strong&gt; 秒速同步到坚果云，真是令人舒心啊。迁移过程中发现了一篇去年8月记录的 &lt;a href=&quot;https://app.yinxiang.com/shard/s61/nl/22318257/22e57aae-0288-4ee2-b5ba-1d3f4b082baa?title=%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85%202019.8.19&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Windows重装软件单&lt;/strong&gt;&lt;/a&gt;那时候还是Windows主力的我，可是下了一番苦工。就以那篇笔记为基础。写一篇 &lt;strong&gt;Windows软件手册&lt;/strong&gt; 吧&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活随笔" scheme="https://blog.jzy.pub/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Git基本命令</title>
    <link href="https://blog.jzy.pub/2020/02/21/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.jzy.pub/2020/02/21/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</id>
    <published>2020-02-21T14:20:00.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>记录基础的git命令</p><a id="more"></a><ul><li><p>身份注册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"uername"</span></span><br><span class="line">$ git config --global user.email &lt;email&gt;</span><br></pre></td></tr></table></figure></li><li><p>添加一个新的远程库  <code>git remote add [shortname] [url]</code></p></li><li><p>初始化一个Git仓库 <code>git init</code></p></li><li><p>添加文件到Git本地仓库:</p><ol><li><code>git add &lt;file&gt;</code> 可反复多次使用，添加多个文件</li><li><code>git commit -m &lt;message&gt;</code>完成</li></ol></li><li><p>工作区状态 <code>git status</code></p></li><li><p>查看修改内容 <code>git diff</code></p></li><li><p>查看提交历史 <code>git log</code></p></li><li><p>HEAD指向的版本就是当前版本,在历史版本之间切换 <code>git reset --hard [commit_id]</code></p></li><li><p>查看命令历史 <code>git reflog</code></p></li><li><p>丢弃工作区的修改 <code>git checkout -- file</code></p></li><li><p>丢弃暂存区 <code>git reset HEAD [file]</code></p></li><li><p>删除文件 <code>git rm</code></p></li><li><p>创建一个分支包含前面的内容 <code>git checkout --orphan doc</code></p></li><li><p>提交到分支 <code>git push -u origin master</code></p></li><li><p>合并分支 <code>git merge</code></p></li><li><p>更新代码到本地</p><ol><li><code>git status</code> 本地分支文件信息</li><li><code>git branch</code> 查看当前分支</li><li><code>git checkout [name]</code> 切换分支</li><li><code>git pull</code> 更新代码</li></ol></li><li><p>克隆代码到本地 <code>git clone &lt;ssh&gt;</code></p></li><li><p>删除远程仓库文件 <code>git rm -r --cached</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录基础的git命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="Code笔记" scheme="https://blog.jzy.pub/categories/Code%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>qBittorrent服务器搭建笔记(Docker版)</title>
    <link href="https://blog.jzy.pub/2019/12/16/qBittorrent%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0-Docker%E7%89%88/"/>
    <id>https://blog.jzy.pub/2019/12/16/qBittorrent%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0-Docker%E7%89%88/</id>
    <published>2019-12-16T10:11:00.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>docker版相比较于qbittorrent-nox版 Docker不需要担心缺少服务器组件，同时也会获得更大的空间，便于管理，直接使用docker进行管理的方式比单独记nox版的命令方便的多。</p><a id="more"></a><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>Racknerd 洛杉矶DC02机房<br>Debian 9 64 Bit<br>安全组放行 <strong>TCP:80,TCP/UDP:8999</strong></p><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><p>使用docker官方一键脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">$ sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line"><span class="comment"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span></span><br></pre></td></tr></table></figure><p>安装完毕后启动docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> docker <span class="comment">#docker开启自启</span></span><br><span class="line">$ sudo systemctl start docker <span class="comment">#启动docker</span></span><br></pre></td></tr></table></figure><h2 id="安装Qbittorrent"><a href="#安装Qbittorrent" class="headerlink" title="安装Qbittorrent"></a>安装Qbittorrent</h2><h4 id="下载qBittorrent镜像"><a href="#下载qBittorrent镜像" class="headerlink" title="下载qBittorrent镜像"></a>下载qBittorrent镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例： 这是文档简单例子，无法运行成功</span></span><br><span class="line">docker create \</span><br><span class="line">  --name=qbittorrent \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Europe/London \</span><br><span class="line">  -e UMASK_SET=022 \</span><br><span class="line">  -e WEBUI_PORT=8080 \</span><br><span class="line">  -p 6881:6881 \</span><br><span class="line">  -p 6881:6881/udp \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -v &amp;lt;/path/to/appdata/config&amp;gt;:/config \</span><br><span class="line">  -v &amp;lt;/path/to/downloads&amp;gt;:/downloads \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><p>在当前用户目录 新建二个文件夹 <strong>config</strong> <strong>downloads</strong><br>然后使用如下命令下载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ docker create \</span><br><span class="line">    --name=qbittorrent \</span><br><span class="line">    -e PUID=1000 \</span><br><span class="line">    -e PGID=1000 \</span><br><span class="line">    -e TZ=Europe/London \</span><br><span class="line">    -e UMASK_SET=022 \</span><br><span class="line">    -e WEBUI_PORT=80 \</span><br><span class="line">    -p 8999:8999 \</span><br><span class="line">    -p 8999:8999/udp \</span><br><span class="line">    -p 80:80 \</span><br><span class="line">    -v ~/config:/config \</span><br><span class="line">    -v ~/downloads:/downloads \</span><br><span class="line">    --restart unless-stopped \</span><br><span class="line">    linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><p>我们在实际运行的命令中更改了pt下载端口为<strong>8999</strong> 因为<strong>6881</strong>在我使用的<strong>pt站点</strong>是被禁用的。同时我们将<strong>qbittorrent的Webui</strong>运行在<strong>80</strong>端口这样我们可以通过网址或者ip直接访问</p><h4 id="运行qBittorrent"><a href="#运行qBittorrent" class="headerlink" title="运行qBittorrent"></a>运行qBittorrent</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker start qbittorrent</span><br></pre></td></tr></table></figure><p>docker版qBittorrent就安装完成了，相较于nox版也简单的多</p><h2 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h2><h4 id="docker控制qBittorrent命令"><a href="#docker控制qBittorrent命令" class="headerlink" title="docker控制qBittorrent命令"></a>docker控制qBittorrent命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull linuxserver/qbittorrent (更新图像)</span><br><span class="line">$ docker stop qbittorrent (停止正在运行的容器)</span><br><span class="line">$ docker rm qbittorrent (删除容器)</span><br><span class="line">$ docker start qbittorrent (启动新容器)</span><br><span class="line">$ docker image prune (删除旧的悬空图像)</span><br></pre></td></tr></table></figure><p>docker命令是通用的 你可以将他们使用到其他镜像 只需要更改命令结尾的<strong>qbittorrent</strong></p><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><ol><li><a href="https://github.com/linuxserver/docker-qbittorrent" target="_blank" rel="noopener">linuxserver/qbittorrent</a></li><li><a href="https://docker_practice.gitee.io/zh-cn/" target="_blank" rel="noopener">Docker — 从入门到实践</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker版相比较于qbittorrent-nox版 Docker不需要担心缺少服务器组件，同时也会获得更大的空间，便于管理，直接使用docker进行管理的方式比单独记nox版的命令方便的多。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>qBittorrent服务器搭建笔记</title>
    <link href="https://blog.jzy.pub/2019/12/07/qBittorrent%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.jzy.pub/2019/12/07/qBittorrent%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2019-12-07T17:11:00.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>最近迷上了PT下载，但在本地上传却很难，说到底还是因为没有一个公网ip就想着放个Qbittorrent在服务器上搞上传，阿里云香港服务器30m带宽 1TB的流量 小种上传下载基本够自己用了 </p><a id="more"></a><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>阿里云香港轻量云服务器<br>Ubuntu18.04<br>安全组放行 <strong>TCP/UDP:8999</strong>  </p><p>因为阿里云的ubuntu18.04缺少add-apt-repository包<br>通过以下命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install software-properties-common</span><br></pre></td></tr></table></figure><h2 id="安装Qbittorrent"><a href="#安装Qbittorrent" class="headerlink" title="安装Qbittorrent"></a>安装Qbittorrent</h2><h4 id="添加软件源"><a href="#添加软件源" class="headerlink" title="添加软件源"></a>添加软件源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:qbittorrent-team/qbittorrent-stable</span><br></pre></td></tr></table></figure><h4 id="安装Qbittorrent-Webui"><a href="#安装Qbittorrent-Webui" class="headerlink" title="安装Qbittorrent Webui"></a>安装Qbittorrent Webui</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install qbittorrent qbittorrent-nox</span><br></pre></td></tr></table></figure><h4 id="启动Qbittorrent"><a href="#启动Qbittorrent" class="headerlink" title="启动Qbittorrent"></a>启动Qbittorrent</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ qbittorrent-nox</span><br></pre></td></tr></table></figure><p>默认启动端口为 8080<br>账户: admin<br>密码: adminadmin</p><p>使用如下命令启动以指定端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ qbittorrent-nox --webui-port=&#123;端口号&#125;</span><br><span class="line"><span class="comment">#ctrl+c 退出当前运行回到命令行</span></span><br></pre></td></tr></table></figure><p>例：qbittorrent-nox –webui-port=9999</p><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><p>相比较于其他后台运行方式更加喜欢screen</p><h4 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt install screen</span><br></pre></td></tr></table></figure><h4 id="新建qb环境并运行Qbittorrent"><a href="#新建qb环境并运行Qbittorrent" class="headerlink" title="新建qb环境并运行Qbittorrent"></a>新建qb环境并运行Qbittorrent</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ screen -S qb</span><br><span class="line">$ qbittorrent-nox</span><br></pre></td></tr></table></figure><p>这样哪怕关闭ssh Qbittorrent也会一直运行在你的服务器后台了<br><strong>记得修改你的webui密码</strong></p><h2 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h2><h4 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h4><p>Screen是可以让你的服务器在关闭ssh连接之后依旧自主运行的软件<br>附一份screen简单命令表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ screen -S yourname  (新建一个叫yourname的session)</span><br><span class="line">$ screen -r yourname  (回到yourname这个session)</span><br><span class="line">$ screen -d yourname  (远程detach某个session)</span><br><span class="line">$ screen -d -r yourname  (结束当前session并回到yourname这个session)</span><br></pre></td></tr></table></figure><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><ol><li><a href="https://www.tapme.top/blog/detail/2019-04-15/" target="_blank" rel="noopener">linux下安装qBittorrent并使用webui进行管理</a></li><li><a href="https://phoenixnap.com/kb/add-apt-repository-command-not-found-ubuntu" target="_blank" rel="noopener">How To Fix ‘Add-Apt-Repository Command Not Found’ On Ubuntu &amp; Debian</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近迷上了PT下载，但在本地上传却很难，说到底还是因为没有一个公网ip就想着放个Qbittorrent在服务器上搞上传，阿里云香港服务器30m带宽 1TB的流量 小种上传下载基本够自己用了 &lt;/p&gt;
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>TeamSpeak搭建笔记</title>
    <link href="https://blog.jzy.pub/2018/12/15/TeamSpeak%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.jzy.pub/2018/12/15/TeamSpeak%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2018-12-15T16:06:24.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>TeamSpeak 虽然说是比较老的东西了 但很使用 很方便 最重要的是它可以自建服务器 是YY的一个很好的替代品 音质优秀 防监听 畅所欲言 并能够为你和朋友构建更好的游戏语音平台 。<br>你可以来我的服务尝试它</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server : ts.jzy.pub</span><br><span class="line">password : 1999</span><br></pre></td></tr></table></figure><h3 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h3><p>TeamSpeak 客户端推荐从官网下载 <a href="https://www.teamspeak.com/en/" target="_blank" rel="noopener">https://www.teamspeak.com/en/</a><br>国内那个teamspeak是魔改版已经很久没有更新了 也无法正常使用。  </p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>阿里云学生机<br>centos7.4<br>安全组放行 <strong>TCP/UDP:9987  TCP:10011 TCP:30033</strong>  </p><p>安装依赖库  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum update -y</span><br><span class="line">$ yum install vim wget perl net-tools bzip2 -y</span><br></pre></td></tr></table></figure><p>创建TeamSpeak用户  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ useradd ts</span><br></pre></td></tr></table></figure><p>修改ts密码  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ passwd ts</span><br></pre></td></tr></table></figure><h3 id="下载TeamSpeak服务器端"><a href="#下载TeamSpeak服务器端" class="headerlink" title="下载TeamSpeak服务器端"></a>下载TeamSpeak服务器端</h3><p>进入ts用户  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ su - ts</span><br></pre></td></tr></table></figure><p>下载teamspeak服务端  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://files.teamspeak-services.com/releases/server/3.11.0/teamspeak3-server_linux_amd64-3.11.0.tar.bz2</span><br></pre></td></tr></table></figure><p>解压  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xjvf teamspeak3-server_linux_amd64-3.11.0.tar.bz2</span><br><span class="line">$ <span class="built_in">cd</span> teamspeak3-server_linux_amd64</span><br></pre></td></tr></table></figure><h3 id="运行teamspeak"><a href="#运行teamspeak" class="headerlink" title="运行teamspeak"></a>运行teamspeak</h3><p>启动  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ touch .ts3server_license_accepted</span><br><span class="line">$ ./ts3server_startscript.sh start</span><br></pre></td></tr></table></figure><p>首次启动保存 Token、serveradmin 和serverpass<br>第一次客户端连接时会要求使用token 使用token的用户是管理员用户  </p><h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br></pre></td></tr></table></figure><p>在文本中操作<br><em>shift-i</em> 进入文本写入模式<br>将下面这句话复制进文本   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot /home/ts/teamspeak3-server_linux_amd64/ts3server_startscript.sh start</span><br></pre></td></tr></table></figure><p><em>esc</em><br><em>:wq</em> 保存并退出  </p><p>查看是否成功  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -l</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>teamspeak 官网：<a href="https://www.teamspeak.com/en/" target="_blank" rel="noopener">https://www.teamspeak.com/en/</a><br>机智的狐狸菌： <a href="https://www.smartfox.cc/index.php/archives/3986/" target="_blank" rel="noopener">https://www.smartfox.cc/index.php/archives/3986/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TeamSpeak 虽然说是比较老的东西了 但很使用 很方便 最重要的是它可以自建服务器 是YY的一个很好的替代品 音质优秀 防监听 畅所欲言 并能够为你和朋友构建更好的游戏语音平台 。&lt;br&gt;你可以来我的服务尝试它&lt;/p&gt;
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Gitea搭建笔记</title>
    <link href="https://blog.jzy.pub/2018/12/13/Gitea%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.jzy.pub/2018/12/13/Gitea%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2018-12-13T04:47:14.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>过去Github只能有一个私人代码存储库，于是找到了Gitea这个替代品</p><a id="more"></a><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>阿里云学生机<br>centos7.4</p><h4 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h4 id="Mysql5-6安装"><a href="#Mysql5-6安装" class="headerlink" title="Mysql5.6安装"></a>Mysql5.6安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum install mysql-server</span><br></pre></td></tr></table></figure><h4 id="配置Mysql"><a href="#配置Mysql" class="headerlink" title="配置Mysql"></a>配置Mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:root /var/lib/mysql</span><br><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>设置MySQL密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root //直接回车进入mysql控制台</span><br><span class="line">mysql&gt;use mysql;</span><br><span class="line">mysql&gt;update user <span class="built_in">set</span> password=password(<span class="string">'123456'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">mysql&gt;<span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h4 id="创建gitea数据库"><a href="#创建gitea数据库" class="headerlink" title="创建gitea数据库"></a>创建gitea数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br><span class="line">mysql -uroot -p&lt;password&gt;</span><br><span class="line">mysql&gt;create database gitea;</span><br><span class="line">mysql&gt;<span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="Gitea搭建"><a href="#Gitea搭建" class="headerlink" title="Gitea搭建"></a>Gitea搭建</h3><h4 id="下载gitea"><a href="#下载gitea" class="headerlink" title="下载gitea"></a>下载gitea</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O gitea https://dl.gitea.io/gitea/1.3.2/gitea-1.3.2-linux-amd64</span><br></pre></td></tr></table></figure><h4 id="运行gitea"><a href="#运行gitea" class="headerlink" title="运行gitea"></a>运行gitea</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x gitea</span><br><span class="line">./gitea web</span><br></pre></td></tr></table></figure><p>gitea会运行在服务器 3000端口 在安全组中打开端口<br>通过 ip:3000 访问</p><h4 id="设置gitea"><a href="#设置gitea" class="headerlink" title="设置gitea"></a>设置gitea</h4><p>第一次访问会让你进行一些设置  </p><p>按照安装数据库时候的信息填进去  </p><p>因为我们通过 <strong>yum</strong> 直接安装的 <strong>git</strong> 版本并没有达到 <strong>2.1.2</strong> 所以需要关闭 lfs 即那一项不填即可</p><p>最后设置 <strong>gitea管理用户</strong> 就可以安装了</p><h4 id="服务器端运行"><a href="#服务器端运行" class="headerlink" title="服务器端运行"></a>服务器端运行</h4><p>安装 <strong>screen</strong> 并进入gitea</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install screen</span><br><span class="line">screen -S gitea</span><br></pre></td></tr></table></figure><p>最后运行 <code>./gitea web</code></p><p>你就可以通过 <strong>ip:3000</strong> 在任何地方使用 <strong>gitea</strong></p><h3 id="绑定域名及其他操作"><a href="#绑定域名及其他操作" class="headerlink" title="绑定域名及其他操作"></a>绑定域名及其他操作</h3><p>购买域名 绑定你的服务器ip</p><p>你可以使用 <strong>nginx反向代理</strong> 或者 在 <strong>~/custom/config/app.ini</strong> 中 设置 <strong>80端口</strong></p><p>下载宝塔不失为一种好的选择</p><p>当然你也可以使用我的 <strong>gitea</strong></p><p><a href="http://git.zhengyang.kim:3000" target="_blank" rel="noopener">http://git.zhengyang.kim:3000</a> 欢迎您的使用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过去Github只能有一个私人代码存储库，于是找到了Gitea这个替代品&lt;/p&gt;
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建笔记</title>
    <link href="https://blog.jzy.pub/2018/12/10/Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.jzy.pub/2018/12/10/Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2018-12-10T17:00:30.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>当前使用的就是hexo博客引擎，捣鼓了蛮久写个教程<br>官网地址 : <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a><br>官方文档 : <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p><a id="more"></a><h2 id="本地-github部署"><a href="#本地-github部署" class="headerlink" title="本地+github部署"></a>本地+github部署</h2><h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p>Git 下载: <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br>Node.js 下载: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>命令行运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;文件夹&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;文件夹&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>然后可以试运行，在hexo文件夹中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>打开浏览器 地址栏输入 localhost:4000 端口查看运行是否成功</p><h4 id="配置到github"><a href="#配置到github" class="headerlink" title="配置到github"></a>配置到github</h4><p>网址 <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>注册并登陆账号<br>新建一个存储库 名字是 <username>.github.io 就可以看到你的网页了</p><p>在本地打开git-bash 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"username"</span></span><br><span class="line">$ git config --global user.email <span class="string">"username@example.com"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></span><br></pre></td></tr></table></figure><p>打开本地文件夹C:\Users&lt;your computer name&gt;.ssh  </p><p>使用记事本或其他工具打开 id_rsa.pub  </p><p>将内容复制 打开你的github个人设置页 保存到你的ssh<br> keys<br> <img src="http://ww1.sinaimg.cn/large/a2dcb7e1gy1fy2pdohcnij20ta0h3ab5.jpg" alt=""></p><p>打开本地hexo文件夹中博客配置文件_config.yml</p><p>复制你 <username>.github.io 的 SshKey</p><p>保存到你_config.yml中的deploy标签中 如下所示<br><img src="http://ww1.sinaimg.cn/large/a2dcb7e1gy1fy2pqdtoeij20qo02lglo.jpg" alt=""></p><p>打开cmd并进入本地hexo文件夹 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>最后打开浏览器 访问 <username>.github.io 就可以看到你的网页了<br><img src="http://ww1.sinaimg.cn/large/a2dcb7e1gy1fy2ptek1fkj20ud0jm3zr.jpg" alt=""></p><p>至此本地+github就完成了。</p><h2 id="Hexo配置到服务器"><a href="#Hexo配置到服务器" class="headerlink" title="Hexo配置到服务器"></a>Hexo配置到服务器</h2><p>百度云服务器<br>centos7+<br>下载安装Xshell6 并连接到你的服务器</p><p>依此安装</p><h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br><span class="line">$ reboot</span><br><span class="line">$ nvm install stable</span><br><span class="line">(node -v --- v11.4.0)</span><br></pre></td></tr></table></figure><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install git-core</span><br><span class="line">(git version --- git version 1.8.3.1)</span><br></pre></td></tr></table></figure><h4 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init hexo</span><br><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-server --save</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>打开服务器端口4000</p><p>你就可以通过你的服务器ip+’:4000’ 访问你的博客了</p><h4 id="安装并运行Screen"><a href="#安装并运行Screen" class="headerlink" title="安装并运行Screen"></a>安装并运行Screen</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install screen</span><br><span class="line">$ screen -S hexo</span><br></pre></td></tr></table></figure><h4 id="再次运行"><a href="#再次运行" class="headerlink" title="再次运行"></a>再次运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h4 id="改变运行端口"><a href="#改变运行端口" class="headerlink" title="改变运行端口"></a>改变运行端口</h4><p>域名解析之后你会发现在浏览器输入你的域名并不能直接访问你的博客<br>此时你需要改变端口 你可以 下载nignx 研究一番<br>也可以直接改变hexo运行端口为80 使用如下语句运行你的hexo server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 80</span><br></pre></td></tr></table></figure><h4 id="关闭xshell"><a href="#关闭xshell" class="headerlink" title="关闭xshell"></a>关闭xshell</h4><p>这样你就可以直接访问你的网站了</p><p>如果需要写文章和更改皮肤等可以访问hexo官网，附录中会放几份我自己翻阅的教程</p><h2 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h2><h4 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h4><p>Screen是可以让你的服务器在关闭ssh连接之后依旧自主运行的软件<br>附一份screen简单命令表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ screen -S yourname  (新建一个叫yourname的session)</span><br><span class="line">$ screen -r yourname  (回到yourname这个session)</span><br><span class="line">$ screen -d yourname  (远程detach某个session)</span><br><span class="line">$ screen -d -r yourname  (结束当前session并回到yourname这个session)</span><br></pre></td></tr></table></figure><h3 id="其他教程"><a href="#其他教程" class="headerlink" title="其他教程"></a>其他教程</h3><p><a href="https://www.jianshu.com/p/7b5702d3f072" target="_blank" rel="noopener">GitHub+Hexo（NexT主题）搭建博客</a><br><a href="https://www.jianshu.com/p/e6662ca7e283" target="_blank" rel="noopener">github+hexo 搭建属于自己的博客网站【2017完整版】</a><br><a href="https://blog.csdn.net/qq_32454537/article/details/79482896" target="_blank" rel="noopener">2018最新版Hexo博客Next主题6.0配置优化</a><br><a href="https://www.jianshu.com/p/21c94eb7bcd1" target="_blank" rel="noopener">绝配：hexo+next主题及我走过的坑</a></p><p>当然最推荐翻阅的还是官方的教程 当然官方的教程会有点晦涩 并且中文版并不是最新的 这时候就需要用到”度娘”了</p><p><strong>官方有一份hexo的中文视频教程</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当前使用的就是hexo博客引擎，捣鼓了蛮久写个教程&lt;br&gt;官网地址 : &lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/zh-cn/&lt;/a&gt;&lt;br&gt;官方文档 : &lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/zh-cn/docs/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Servers笔记" scheme="https://blog.jzy.pub/categories/Servers%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>我</title>
    <link href="https://blog.jzy.pub/2018/12/08/%E6%88%91/"/>
    <id>https://blog.jzy.pub/2018/12/08/%E6%88%91/</id>
    <published>2018-12-08T19:15:13.000Z</published>
    <updated>2021-03-24T14:21:49.365Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇博客理应该介绍一下自己，可介绍自己偏偏是个很难的事情。<br><br>记得初中的时候钱老师给我们读了一篇周涛的《关于自己》。文章诙谐幽默，把自己比喻成了北村小说里的人物康如松，那时候天真烂漫的我读出来的有趣和现在自然大不相同，倒是有些羡慕当时的自己了。<br><br>读书读书，说起我，自然不能跳过读书，好像自己很爱读书的样子，实则是实在没什么可以说，好像也就读书上的了台面。读书的那几年倒真的是天天在读书，读的自然不是什么数学书，那时候读的书在那时候看是上不了台面的。初中就是这么读着上不了台面的书走完的。<br></p><a id="more"></a><p>那你肯定要问，读的是什么书啊？读的是钱老师来了自己要偷偷藏起来的书。<br><br>那时候的我没有空闲的时间的，从来都是抱着本书在座位上看，上课下课皆是如此，说废寝忘食不为过。座位靠着窗户，所以虽说全副心神的读书但总得分几分出来提防着老师，大概是读到了精彩之处。钱老师路过窗口的时候我竟浑然不觉。<br><br>“正阳，你在读什么书啊？”<br><br>直到钱老师问话我才从书中走出，赶忙将它扔进了桌子。钱老师是从来不管我看书的，但这书让她看到可不怎么好。于是我转过头去咧嘴一笑，试图蒙混过关。<br><br>“看来正阳知道自己看的是什么书啊，见到我就把它藏起来。”钱老师笑着说。<br><br>我至今都记得那天的场景，也是在那天后我才想明白一个道理，我自己都认为自己读的书不是什么有价值的书为什么我还要读它呢。自那以后我就开始控制自己少看网络小说，慢慢的找些文学，人物传记看起。<br><br>现在想来那时候读的书也非全然无用，至少它让我有了明辨是非的能力。算是我对初中读网络小说的自己最后的倔强了。<br><br>在多读有价值的书的指导思想下我进入了高中，母亲还是比较欣慰的看到我开始看一些在她看来价值应该蛮高的书，当然那些书是比不得数学书<br>。过了没多久，令我母亲和老师遗憾的是我开始读金庸武侠小说。虽然我认为它们真的很有价值，但他们并不这么想，于是撕书从《天龙八部》开始，我和我母亲的战争从《射雕英雄传》打到了《鹿鼎记》，期间我逃学，离家出走，甚至于和母亲动过手。直到自己看完了金庸所有的小说，我来到母亲面前告诉她我再也不会看武侠小说了。<br><br>记得那天妈妈很开心，我也很开心。<br><br>也是那时候我开始看一些国外的文学作品，村上春树，马尔克斯加西亚，渡边淳一……挪威的森林是最喜欢的，那本书大概是导火索我开始变的感性，变的想法很多，也是那时候开始真正的喜欢王小波，喜欢他的杂文。他的小说是看不懂的。因为深奥了读不下去，大概不是太深奥了，而是心有些浮躁。毕竟也高二了，成绩是差的，小高考也不知道能不能过。读了那么多书算是学会为自己的未来担忧了。<br><br>沉下心来读王小波的小说提上了日程，很遗憾我爱上了电子竞技，网吧成了我的主战场。那段日子唯一值得一提的大事是期中考试我网吧三天三夜，然后被父母拖回家，学校给予我记大过处分。其实挺有意思，哪怕我做了那么多错事，我每天在学校里依旧在读书，那时候对于我能说的出口的也就“喜欢读书”了。<br><br>年纪到了，情窦初开。喜欢上了一个女孩。<br><br>那时候我喜欢读林语堂的《红牡丹》，王安忆《长安乱》，村上春树的《挪威的森林》看了不知几遍，还有好多，都是跟爱情有关的。结局都挺糟心的。我喜欢上了余华，就这样高二在我一本接一本余华的小说中走完了。余华的书写的很黑暗，也很细密。我变的阴沉注重细节<br><br>接下来的日子，我依旧没有认真学习，我至今都不明白，明明读了那么多书懂了那么多道理为什么当时的我还是没有认真的去学习。那时候我变的极端，有点挥斥方遒的意思。看《丑陋的中国人》，天生性子使然我讨厌极了柏杨。也感谢林语堂，我想《吾国与吾民》才是我们真正去看待中国人的方式。接着，林语堂从教给我爱情，变得开始教我养生，蒋勋的书也教会了我修身。当然不学习的我还读了不少书这里就不一一说了。总的来说，高三是我读书厚积薄发的一年，各种各样的想法在我脑海中汇聚，性格也变得稳重了很多，也变的多愁善感，有些想法偏激偏坏了。<br><br>读过的书都是会在你身上流下痕迹的。<br><br>然后我就不读书了。明明很喜欢读书呀，我怎么就不读了呢。因为有手机了，上课不再无聊了，可以玩手机打游戏了。只算taptap家下载的游戏我就玩了249款。那时候最令我迷茫的问题就是明明我喜欢读书可是为什么读不进去呢？读一会儿就想着玩手机。竟而发展成我到底是不是真的喜欢读书。<br><br>读书，也习惯了这么久了，就懒得改了。我在手机玩够了之后，又开始看书了。就这样虽然看的少了，看的断断续续的，但总归是要看的。学习是不可能学习的，但书是一定要看书的，也不知道该干嘛，只有看看书了。<br><br>高中到大学，书架上多了很多的书，从文学变成了计算机。现在知道，应该学习了，要不然将来该干什么。好在看得进去书，看得懂书，看见书有莫名的亲切感，要不然计算机是学不下去的。<br><br>写了半天的书，才发现应该写“我”的。大概写我的书就是在写我把。<br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇博客理应该介绍一下自己，可介绍自己偏偏是个很难的事情。&lt;br&gt;&lt;br&gt;记得初中的时候钱老师给我们读了一篇周涛的《关于自己》。文章诙谐幽默，把自己比喻成了北村小说里的人物康如松，那时候天真烂漫的我读出来的有趣和现在自然大不相同，倒是有些羡慕当时的自己了。&lt;br&gt;&lt;br&gt;读书读书，说起我，自然不能跳过读书，好像自己很爱读书的样子，实则是实在没什么可以说，好像也就读书上的了台面。读书的那几年倒真的是天天在读书，读的自然不是什么数学书，那时候读的书在那时候看是上不了台面的。初中就是这么读着上不了台面的书走完的。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="我的精神家园" scheme="https://blog.jzy.pub/categories/%E6%88%91%E7%9A%84%E7%B2%BE%E7%A5%9E%E5%AE%B6%E5%9B%AD/"/>
    
    
  </entry>
  
</feed>
